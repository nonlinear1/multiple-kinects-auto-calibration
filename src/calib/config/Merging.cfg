#!/usr/bin/env python
PACKAGE = "calib"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

pm = gen.add_group("Plane matching")
pm.add("plane_matching", bool_t, 0, "Enable plane matching (match by plane size otherwise).", True)
pm.add("normal_radius", double_t, 0, "Set normal estimation radius (in mm).", 3, 0, 1000)

kp = gen.add_group("Keypoints extraction")
kp.add("iss_support_radius", double_t, 0, "Support radius for ISS detector (in mm).", 100, 0, 500)
kp.add("iss_nms_radius", double_t, 0, "Non max radius for ISS detector (in mm).", 100, 0, 500)

feat = gen.add_group("Feature computation")
feat.add("kp_est_radius", double_t, 0, "Set feature estimation radius (in mm).", 200, 0, 1000)
feat.add("kp_dupl_rej", bool_t, 0, "Use duplicate rejection for features matchings.", True)     
feat.add("match_th", double_t, 0, "Maximum feature distance for matching.", 10000, 0, 100000)

cutting = gen.add_group("Cutting")
cutting.add("x_enable", bool_t, 0, "Enable cutting over X axis", False)
cutting.add("x_min", double_t, 0, "Cutting lower bound over X axis (in mm)", -1000, -5000, 5000)
cutting.add("x_max", double_t, 0, "Cutting upper bound over X axis (in mm)", 1000, -5000, 5000)
cutting.add("y_enable", bool_t, 0, "Enable cutting over Y axis (in mm)", False)
cutting.add("y_min", double_t, 0, "Cutting lower bound over Y axis (in mm)", -1000, -5000, 5000)
cutting.add("y_max", double_t, 0, "Cutting upper bound over Y axis (in mm)", 1000, -5000, 5000)
cutting.add("z_enable", bool_t, 0, "Enable cutting over Z axis (in mm)", False)
cutting.add("z_min", double_t, 0, "Cutting lower bound over Z axis (in mm)", -1000, -5000, 5000)
cutting.add("z_max", double_t, 0, "Cutting upper bound over Z axis (in mm)", 1000, -5000, 5000)

reg = gen.add_group("Transform estimation")
reg.add("planes_weight", double_t, 0, "Planes weight when estimating transform", 1, 0, 100)
reg.add("use_planes", bool_t, 0, "Use detected planes", True)
reg.add("use_points", bool_t, 0, "Use detected keypoints", True)
exit(gen.generate(PACKAGE, "calib", "Merging"))