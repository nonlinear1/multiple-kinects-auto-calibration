#!/usr/bin/env python
PACKAGE = "calib"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

method = gen.enum([     gen.const("None", int_t, 0, "No keypoint detection"),
                        gen.const("ISS", int_t, 1, "Intrinsic Shape Signature"),
                        gen.const("SIFT", int_t, 2, "Scale-invariant feature transform")],
                        "Choose keypoints extraction method")

ne = gen.add_group("Normal Estimation")
ne.add("normal_radius", double_t, 0, "Set normal estimation radius (in mm).", 50, 0, 1000)

kp = gen.add_group("Keypoints extraction")
kp.add("kp_type", int_t, 0, "Keypoints extraction method", 1, 0, 2, edit_method=method)
kp.add("iss_support_radius", double_t, 0, "Support radius for ISS detector (in mm).", 15, 0, 500)
kp.add("iss_nms_radius", double_t, 0, "Non max radius for ISS detector (in mm).", 15, 0, 500)
kp.add("sift_min_scale", double_t, 0, "", 0.01, 0, 0.1)
kp.add("sift_nr_octaves", int_t, 0, "", 3, 1, 10)
kp.add("sift_nr_scales_per_octave", int_t, 0, "", 4, 1, 10)
kp.add("sift_min_contrast", double_t, 0, "", 0.001, 0, 0.05)

feat = gen.add_group("Feature computation")
feat.add("kp_est_radius", double_t, 0, "Set feature estimation radius (in mm).", 50, 0, 1000)
feat.add("kp_corr_rej", bool_t, 0, "Use correlation sample consensus rejection.", True)   

match = gen.add_group("Features matching")  
feat.add("match_th", double_t, 0, "Maximum feature distance for matching.", 1, 0, 10)
feat.add("match_th_dist", double_t, 0, "Maximum distance allowed for matching.", 200, 0, 2000)

cutting = gen.add_group("Cutting")
cutting.add("cut_reverse", bool_t, 0, "Change cutting side", False)
cutting.add("cut_th", double_t, 0, "Set cutting threshold distance from plane.", 100, -1000, 1000)

exit(gen.generate(PACKAGE, "calib", "Matching"))