#!/usr/bin/env python
PACKAGE = "calib"
 
from dynamic_reconfigure.parameter_generator_catkin import *
 
gen = ParameterGenerator()
 
stitch = gen.add_group("Stitching")
feature_type = gen.enum([gen.const("SURF", int_t, 0, "SURF features"),
                        gen.const("ORB", int_t, 1, "ORB features")],
                        "Choose features type.")
estimator_type = gen.enum([gen.const("affine", int_t, 0, "Affine estimation"),
                        gen.const("homographic", int_t, 1, "Homographic estimation")],
                        "Choose estimator type.")                        
                        
stitch.add("features_type", int_t, 0, "Plane detection method", 0, 0, 1, edit_method=feature_type)
 
stitch.add("gpu", bool_t, 0, "Try to use GPU.", True)

# surf = gen.add_group("SURF_keypoints")
# surf.add("surf_hess_th", double_t, 0, "Set Hessian threshold for SURF keypoints .", 10, 0, 100)
# surf.add("n_oct", int_t, 0, "Set number of octaves for SURF keypoints .", 3, 1, 10)
# surf.add("n_oct_desc", int_t, 0, "Set number of octaves descriptors for SURF keypoints .", 3, 1, 10)
# surf.add("n_layers", int_t, 0, "Set number of layers for SURF keypoints .", 4, 1, 10)
# surf.add("n_layers_desc", int_t, 0, "Set number of layers descriptors for SURF keypoints .", 4, 1, 10)

# surf = gen.add_group("ORB_keypoints")
# surf.add("n_orb_features", int_t, 0, "Set number ORB features .", 1500, 1, 10000)

# match = gen.add_group("Matching")
# match.add("match_conf", double_t, 0, "Set keypoint matching confidence threshold.", 0.3, 0, 10)

# estim = gen.add_group("Estimation")
# estim.add("estimator", int_t, 0, "Estimator type.", 0, 0, 1, edit_method=estimator_type)
 
exit(gen.generate(PACKAGE, "calib", "Stitch"))